Shader "default_shader" {
	Properties {
		_uMainTex ( "main texture", 2D ) = "" {}
		_uColor ("display color", Color) = (1, 1, 1, 1)
	}
	SubShader {
		Tags {"Queue"="Geometry"}
		Blend SrcAlpha OneMinusSrcAlpha
		Pass {
			CGPROGRAM

			uniform sampler2D _uMainTex;
			uniform float4 _uColor;

			struct appdata_t {
				float4 pos : POSITION;
				float2 uv : TEXCOORD0;
				float3 normal : NORMAL;
			};
			struct v2f {
				float4 pos : SV_POSITION;
				float2 uv : TEXCOORD0;
				float3 normal : TEXCOORD1;
				float3 worldpos : TEXCOORD2;
			};
			v2f vert (appdata_t v) {
				v2f o;
				o.pos = mul( uMVPMatrix, v.pos );
				o.uv = v.uv;
				o.normal = mul( uMMatrixIT, float4(v.normal, 0.0)).xyz;
				o.worldpos = mul( uMMatrix, v.pos ).xyz;
				return o;
			}
			float4 frag(v2f i) : SV_TARGET {
				float3 diff = uWorldEyePos.xyz-i.worldpos.xyz;
				float3 normal = i.normal;
				float intensity = 0.5*dot(normalize(normal.xyz), normalize(diff)) + 0.5;
				float4 color = tex2D(_uMainTex, i.uv) * _uColor;
				return float4(color.xyz * intensity,color.w);
			}
			
			ENDCG
		}
	}
}