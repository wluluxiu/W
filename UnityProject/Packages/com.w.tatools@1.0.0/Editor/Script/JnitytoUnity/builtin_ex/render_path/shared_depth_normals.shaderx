Shader "hidden/shared_depth_normals" {
	Properties {
	}
	SubShader {
		Name "SharedDepthNormals"	
		ZWrite On ZTest LEqual 
		Cull Off

		Pass {
			Tags { "LightMode" = "DepthNormals" }

			CGPROGRAM
			
            #pragma multi_compile_instancing
            #pragma multi_compile_vert_skinning_baked
			#pragma vertex vert
			#pragma fragment frag

			#include "CG.cginc"

			struct v2f {
				float4 pos : SV_POSITION;
				float4 nz : TEXCOORD0;
                VERTEX_INPUT_INSTANCE_ID
			};

			v2f vert( appdata_base v ) {
				SETUP_INSTANCE_ID(v);
				v2f o;
				// o.pos = mul(uMVPMatrix,v.vertex);
				// o.nz.xyz = COMPUTE_VIEW_NORMAL;
				// o.nz.w = COMPUTE_DEPTH_01;

				SkinInput inSkin; 
				inSkin.vertex = v.vertex;
				inSkin.normal = v.normal;
				SETUP_SKIN_ATTR(v, inSkin);
				SkinOutput outSkin;
				outSkin = Skinning(inSkin);
				o.pos = mul(uMVPMatrix, outSkin.vertex);
				o.nz.xyz = COMPUTE_VIEW_NORMAL_SKIN_BAKED(outSkin.normal);
				o.nz.w = COMPUTE_DEPTH_01_SKIN_BAKED(outSkin.vertex);

				return o;
			}

			float4 frag(v2f i) : SV_Target {
				return EncodeDepthNormal (i.nz.w, i.nz.xyz);
			}

			ENDCG
		}
	}
}