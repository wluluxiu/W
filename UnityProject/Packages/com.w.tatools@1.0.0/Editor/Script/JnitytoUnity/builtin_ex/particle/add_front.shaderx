Shader "hidden/particle_default_add_front" {
	Properties {
		_uMainTex ( "main texture", 2D ) = "#builtin/image/default3dtex.png" {}
		_uMainTex_ST ("mainTex ST", Vector) = (1.0, 1.0, 0.0, 0.0)
		_uColor ("display color", Color) = (1, 1, 1, 1)
		_Flip_Y("disPlay flipy", float) = 1.0
		_uBrightness("brightness", float) = 1.0
	}
	SubShader {
		Tags {"Queue"="Geometry"}
		Tags {"PreviewType"="Plane"}
		Blend SrcAlpha One
		Cull back
		ZTest LEqual
		ZWrite False
		Pass {
			CGPROGRAM
			uniform sampler2D _uMainTex;
			uniform float4 _uMainTex_ST;
			uniform float4 _uColor;
			uniform float _Flip_Y;
			uniform float _uBrightness;

			struct appdata_t {
				float4 pos : POSITION;
				float2 uv : TEXCOORD0;
				float4 color : COLOR;
			};
			struct v2f {
				float4 pos : SV_POSITION;
				float2 uv : TEXCOORD0;
				float4 color : COLOR;
			};
			v2f vert (appdata_t v) {
				v2f o;
				o.pos = mul( uMVPMatrix, v.pos );
				float a = step(0.f, _Flip_Y);
				float uvy = lerp(1 - v.uv.y, v.uv.y, a);
				o.uv = float2( v.uv.x, uvy ) * _uMainTex_ST.xy + _uMainTex_ST.zw;
				o.color = v.color;
				return o;
			}
			float4 frag(v2f i) : SV_TARGET {
				return _uBrightness * _uColor * i.color * tex2D( _uMainTex, i.uv );
			}

			ENDCG
		}
	}
}
