Shader "3d/label3d_ttf_normal" {
    Properties {
        _uMainTex ("Default Texture", 2D) = "" {}
        _uTextColor ("Text Color", Color) = (1.0, 1.0, 1.0, 1.0)
        _uMainTex_ST("_uMainTex_ST",Vector)=(1.0, 1.0, 0.0, 0.0)
    }

    SubShader {
        Tags { "Queue"="Transparent" }

        Pass {
            
            Blend SrcAlpha OneMinusSrcAlpha
            Cull Back
            ZTest Less
            ZWrite On

            CGPROGRAM

            uniform sampler2D _uMainTex;
            uniform float4 _uTextColor;
            uniform float4 _uMainTex_ST;
			
            #include "CG.cginc"

            struct a2v {
                float4 pos : POSITION;
                float4 color : COLOR;
                float2 uv : TEXCOORD0;
            };

            struct v2f {
                float4 pos : SV_POSITION;
                float4 color : TEXCOORD0;
                float2 uv : TEXCOORD1;
            };

            v2f vert(a2v i) {
                v2f o;
                o.pos = mul(uMVPMatrix, i.pos);
                o.color = i.color;
                o.uv = TRANSFORM_TEX(i.uv,_uMainTex);
                return o;
            }

            float4 frag(v2f i) : SV_TARGET {
                float4 c = tex2D(_uMainTex, i.uv);
                return i.color * float4(_uTextColor.rgb, _uTextColor.a * c.a);
            }

            ENDCG
        }
    }
}